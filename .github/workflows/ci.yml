name: CI
on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
    types:
      - opened
      - reopened
      - synchronize

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        ros-distro: [melodic]
        arch: [amd64, arm64, armhf]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Prepare test ROS package
        uses: actions/checkout@v2
        with:
          repository: 'ros/ros_tutorials'
          ref: 'melodic-devel'
          path: 'ros_tutorials'

      - name: Prepare for Cross-Build
        if: contains(matrix.arch, 'arm') == true
        run: |
          sudo apt-get install -y qemu-user-static

      - name: Prepare Docker
        run: |
          echo '{"experimental": true}' | sudo tee -a /etc/docker/daemon.json > /dev/null
          mkdir ~/.docker
          echo '{"experimental": "enabled"}' | tee -a ~/.docker/config.json > /dev/null
          sudo service docker restart

      - name: Run bloom-generate
        id: binary
        run: |
          cd ${GITHUB_WORKSPACE}/ros_tutorials/turtlesim
          ${GITHUB_WORKSPACE}/run.sh /release_binary.sh
          echo ::set-output name=paths::$(ls release/*.deb)
        env:
          ROS_DISTRO: ${{ matrix.ros-distro }}
          ARCH: ${{ matrix.arch }}

      - name: Output binary name
        run: |
          echo ${{ steps.binary.outputs.paths }}
